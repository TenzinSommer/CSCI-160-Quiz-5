// time complexity is logn

public static int fibonacciModified(int t1, int t2, int n) {
    // Write your code here
    // base case when t1 <= 0
    // n shows number of calls - 2
    //     
        // if (n == 0) {
        //     System.out.println((t1 + (t2 ^= 2)));
        //     return (t1 + (t2 ^= 2));
        // }
        // else {
        //     // System.out.println(n);
        //     return fibonacciModified(t1, t2, n - 1);
        // }  
        
        int t3 = 0;
        while (n != 2) {
            t3 = t1 + (t2 ^= 2);
            n -= 1;
            
            int temp = t2;
            t1 = temp;
            t2 = t3;
            System.out.println(t3);
        }    
        
        return t3;
        
    }